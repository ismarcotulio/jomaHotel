
package view;

import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

public class AddReservation extends javax.swing.JInternalFrame {
    
    /**
     * Creates new form Reserva
     */
    public AddReservation() {
        initComponents();
        DefaultListModel listModelRoom = new DefaultListModel();
        for(core.Room room: Main.jomaHotel.getRooms()){
                listModelRoom.addElement(String.format("%s         %s",room.getNumber(),room.getType()));
        }
        roomList.setModel(listModelRoom);
        
        DefaultListModel listModelClient = new DefaultListModel();
        for(core.Client client: Main.jomaHotel.getClients()){
                listModelClient.addElement(String.format("%s          %s %s",
                        client.getId(),
                        client.getName(),
                        client.getLastName()
                ));
        }
        clientsList.setModel(listModelClient);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        reservationComboBox = new javax.swing.JComboBox<>();
        cardPane = new javax.swing.JPanel();
        clientsPane = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        clientsScrollPane = new javax.swing.JScrollPane();
        clientsList = new javax.swing.JList<>();
        roomsPane = new javax.swing.JPanel();
        lblRooms = new javax.swing.JLabel();
        roomScrollPane = new javax.swing.JScrollPane();
        roomList = new javax.swing.JList<>();
        lblIngreso = new javax.swing.JLabel();
        dateIngreso = new com.toedter.calendar.JDateChooser();
        lblSalida = new javax.swing.JLabel();
        dateSalida = new com.toedter.calendar.JDateChooser();
        btnReservar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        reservationComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "clients", "rooms" }));
        reservationComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                reservationComboBoxItemStateChanged(evt);
            }
        });
        reservationComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reservationComboBoxActionPerformed(evt);
            }
        });

        cardPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        cardPane.setLayout(new java.awt.CardLayout());

        clientsPane.setBackground(new java.awt.Color(247, 250, 250));

        jLabel2.setText("Lista de Clientes");

        clientsScrollPane.setViewportView(clientsList);

        javax.swing.GroupLayout clientsPaneLayout = new javax.swing.GroupLayout(clientsPane);
        clientsPane.setLayout(clientsPaneLayout);
        clientsPaneLayout.setHorizontalGroup(
            clientsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(clientsPaneLayout.createSequentialGroup()
                .addGap(142, 142, 142)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, clientsPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(clientsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                .addContainerGap())
        );
        clientsPaneLayout.setVerticalGroup(
            clientsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(clientsPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clientsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                .addContainerGap())
        );

        cardPane.add(clientsPane, "card2");

        roomsPane.setBackground(new java.awt.Color(253, 251, 250));

        lblRooms.setText("Lista de Habitaciones");

        roomScrollPane.setViewportView(roomList);

        javax.swing.GroupLayout roomsPaneLayout = new javax.swing.GroupLayout(roomsPane);
        roomsPane.setLayout(roomsPaneLayout);
        roomsPaneLayout.setHorizontalGroup(
            roomsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roomsPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(roomScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roomsPaneLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblRooms)
                .addGap(118, 118, 118))
        );
        roomsPaneLayout.setVerticalGroup(
            roomsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomsPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblRooms)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(roomScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                .addContainerGap())
        );

        cardPane.add(roomsPane, "card3");

        lblIngreso.setLabelFor(dateIngreso);
        lblIngreso.setText("Fecha de Inicio de reserva:");

        dateIngreso.setDateFormatString("dd/MM/yyyy");
        dateIngreso.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        lblSalida.setLabelFor(dateSalida);
        lblSalida.setText("Fecha Final de reserva:");

        dateSalida.setDateFormatString("dd/MM/yyyy");
        dateSalida.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        btnReservar.setText("Reservar");
        btnReservar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReservarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(reservationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(116, 116, 116))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(cardPane, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(btnReservar)
                        .addGap(10, 10, 10)
                        .addComponent(btnCancelar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblSalida)
                                .addGap(36, 36, 36)
                                .addComponent(dateSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblIngreso)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dateIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(reservationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cardPane, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReservar)
                    .addComponent(btnCancelar))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void reservationComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reservationComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reservationComboBoxActionPerformed

    private void reservationComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_reservationComboBoxItemStateChanged
        if(reservationComboBox.getSelectedItem().toString() == "clients"){
            clientsPane.setVisible(true);
            roomsPane.setVisible(false);
        }else{
            clientsPane.setVisible(false);
            roomsPane.setVisible(true);
        }
    }//GEN-LAST:event_reservationComboBoxItemStateChanged

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        try {
            this.setClosed(true);
        } catch (Exception ex) {
            System.err.println("Closing Exception");
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnReservarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReservarActionPerformed
        String clientId = "";
        String roomNumber = "";
        String entry_date = "";
        String out_date = "";
        int number;
        core.Client client = null;
        core.Room room = null;
        
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
        
        try{
            clientId = clientsList.getSelectedValue().split("[  ]+")[0];
            roomNumber = roomList.getSelectedValue().split("[   ]+")[0];
            entry_date = dateFormat.format(dateIngreso.getDate());
            out_date = dateFormat.format(dateSalida.getDate());
        }catch(Exception e){}
       
       if(clientId != "" && roomNumber != "" && entry_date != "" && out_date != ""){
            if(core.Validator.validateDates(dateIngreso.getDate(),dateSalida.getDate())){
                if(Main.jomaHotel.searchBetweenDatesReservation(dateIngreso.getDate(),dateSalida.getDate(),Main.jomaHotel.getRoom(Integer.parseInt(roomNumber))) == false){
                   room = Main.jomaHotel.getRoom(Integer.parseInt(roomNumber));
                    client = Main.jomaHotel.getClient(clientId);
                    number = Main.jomaHotel.lastIndexReservation();
                    Main.jomaHotel.addReservation(number, room, client, entry_date, out_date);
                    JOptionPane.showMessageDialog(null, "Se ah realizado la reservacion exitosamente");
                    try {
                    this.setClosed(true);
                    } catch (Exception ex) {
                        System.err.println("Closing Exception");
                    }
                }else{
                   JOptionPane.showMessageDialog(null, "Error: Rango de fechas no disponible en este cuarto, favor de verificar la lista de reservas");
                }
                
                
                
            }else{
                JOptionPane.showMessageDialog(null, "Error: La fecha de entrada debe ser mayor a la actual y menor a la de salida");
            }
           
            
       }else{
            JOptionPane.showMessageDialog(null, "Error: No se an llenado o seleccionado correctamente todos los campos");
       }
            
        
    }//GEN-LAST:event_btnReservarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnReservar;
    private javax.swing.JPanel cardPane;
    private javax.swing.JList<String> clientsList;
    private javax.swing.JPanel clientsPane;
    private javax.swing.JScrollPane clientsScrollPane;
    private com.toedter.calendar.JDateChooser dateIngreso;
    private com.toedter.calendar.JDateChooser dateSalida;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblIngreso;
    private javax.swing.JLabel lblRooms;
    private javax.swing.JLabel lblSalida;
    private javax.swing.JComboBox<String> reservationComboBox;
    private javax.swing.JList<String> roomList;
    private javax.swing.JScrollPane roomScrollPane;
    private javax.swing.JPanel roomsPane;
    // End of variables declaration//GEN-END:variables
}
